{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "CloudConductor pattern template",

  "Parameters" : {
    "KeyName" : {
      "Description" : "Name of an existing EC2/OpenStack KeyPair to enable SSH access to the instances",
      "Type" : "String",
      "MinLength" : "1",
      "MaxLength" : "255",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "can contain only ASCII characters."
    },
    "SSHLocation" : {
      "Description" : "The IP address range that can be used to SSH to the EC2/OpenStack instances",
      "Type" : "String",
      "MinLength" : "9",
      "MaxLength" : "18",
      "Default" : "0.0.0.0/0",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "BackupRestoreInstanceType" : {
      "Description" : "BackupRestoreServer instance type",
      "Type" : "String",
      "Default" : "t2.small"
    },
    "BackupRestoreImageId" : {
      "Description" : "[computed] BackupRestoreServer Image Id. This parameter is automatically filled by CloudConductor.",
      "Type" : "String"
    },
    "VpcId" : {
      "Description" : "[computed] The Vpc Id which is used by platform pattern.",
      "Type" : "String"
    },
    "SubnetId" : {
      "Description" : "[computed] The Subnet Id which is used by platform pattern.",
      "Type" : "String"
    },
    "ClusterAddresses" : {
      "Description" : "[computed] Private IP Addresses to join cluster.",
      "Type" : "String"
    },
    "SharedSecurityGroup" : {
      "Description" : "[computed] The SecurityGroup which is used by platform pattern.",
      "Type" : "String"
    },
    "CloudConductorLocation" : {
      "Description" : "The IP address range of CloudConductor server to enable Consul api access to frontend instance.",
      "Type" : "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },

  "Mappings" : {
  },

  "Resources" : {

    "BackupRestoreServer" : {
      "Type" : "AWS::EC2::Instance",
      "Metadata" : {
        "Role" : "backup_restore",
        "ClusterAddresses": { "Ref": "ClusterAddresses" }
      },
      "Properties" : {
        "ImageId" : { "Ref" : "BackupRestoreImageId" },
        "InstanceType" : { "Ref" : "BackupRestoreInstanceType" },
        "KeyName" : { "Ref" : "KeyName" },
        "NetworkInterfaces" : [{
          "AssociatePublicIpAddress" : true,
          "DeviceIndex" : "0",
          "GroupSet" : [{"Ref" : "SharedSecurityGroup"}, {"Ref" : "BackupRestoreSecurityGroup"}],
          "SubnetId" : { "Ref" : "SubnetId" }
        }],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/sh -v\n",
          "# Helper function\n",
          "function error_exit\n",
          "{\n",
          "  cfn-signal -e 1 -r \"$1\" '", { "Ref" : "BackupRestoreWaitHandle" }, "'\n",
          "  exit 1\n",
          "}\n",
          "# Set Parameters\n",
          "/bin/echo 'ROLE=backup_restore' >> /opt/cloudconductor/config\n",
          "/bin/echo 'STACK_NAME=", { "Ref": "AWS::StackName" }, "' >> /opt/cloudconductor/config\n",
          "/bin/echo 'RESOURCE_NAME=BackupRestoreServer' >> /opt/cloudconductor/config\n",
          "/bin/echo 'REGION=", { "Ref": "AWS::Region" }, "' >> /opt/cloudconductor/config\n",
          "# Run Consul\n",
          "# this process is required because of init sequence.\n",
          "/etc/init.d/consul start || error_exit 'Failed to start consul agent'\n",
          "# Wait member-join event\n",
          "host_name=`hostname`\n",
          "for i in `seq 10`; do\n",
          "  if [ ! -z \"`/usr/local/bin/consul members | grep ${host_name}`\" ]; then\n",
          "    # Send success signal\n",
          "    cfn-signal -e 0 -r 'BackupRestoreServer Setup complete' '", { "Ref" : "BackupRestoreWaitHandle" }, "'\n",
          "    exit 0\n",
          "  fi\n",
          "  sleep 1\n",
          "done\n",
          "error_exit 'Failed to join the consul cluster.'\n"
        ]]}},
        "Tags" : [{"Key": "Name", "Value": "BackupRestoreServer"}, {"Key": "Role", "Value": "backup_restore"}]
      }
    },
    "BackupRestoreSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable amanda access",
        "VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "10080", "ToPort" : "10083", "CidrIp" : "10.0.0.0/16"},
          {"IpProtocol" : "tcp", "FromPort" : "571", "ToPort" : "571", "CidrIp" : "10.0.0.0/16"}
        ]
      }
    },
    "SharedSecurityGroupInboundRuleAmanda": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "IpProtocol": "tcp",
        "FromPort": "10080",
        "ToPort": "10083",
        "SourceSecurityGroupId": { "Ref" : "BackupRestoreSecurityGroup" },
        "GroupId": { "Ref" : "SharedSecurityGroup" }
      }
    },
    "SharedSecurityGroupInboundRuleMeter": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "IpProtocol": "tcp",
        "FromPort": "571",
        "ToPort": "571",
        "SourceSecurityGroupId": { "Ref" : "BackupRestoreSecurityGroup" },
        "GroupId": { "Ref" : "SharedSecurityGroup" }
      }
    },
    "BackupRestoreWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },
    "BackupRestoreWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "BackupRestoreServer",
      "Properties" : {
        "Handle" : { "Ref" : "BackupRestoreWaitHandle" },
        "Timeout" : "600"
      }
    }
  },
  "Outputs" : {
  }
}
